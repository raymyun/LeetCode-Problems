https://leetcode.com/problems/container-with-most-water/submissions/1160768824?envType=study-plan-v2&envId=leetcode-75

class Solution:
    def maxArea(self, height: List[int]) -> int:
        left = 0
        right = len(height) - 1
        maxArea = 0
        currArea = 0

        while left != right:
            if height[left] < height[right]:
                currArea = (height[left]) * (right-left)
                left += 1
                if currArea > maxArea:
                    maxArea =  currArea
            else:
                currArea = (height[right]) * (right-left)
                right -= 1
                if currArea > maxArea:
                    maxArea =  currArea
                    
        return maxArea
