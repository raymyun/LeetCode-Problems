https://leetcode.com/problems/can-place-flowers/submissions/1155172735?envType=study-plan-v2&envId=leetcode-75

class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        counter = 0

        #Base Case when n = 0
        if (n == 0):
            return True

        #Another Base Case if size of flowerbed[] is 1
        if len(flowerbed) == 1:
            if flowerbed[0] == 0:
                counter += 1
                if counter == n:
                    return True
                else:
                    return False

        #Actual Logic
        for i in range(len(flowerbed)):
            if flowerbed[i] == 0:
                if i == 0:
                    if flowerbed[i+1] == 0:
                        counter += 1
                        flowerbed[i] = 1
                        if counter == n:
                            return True
                elif i == len(flowerbed) - 1:
                    #if flowerbed[i-1] and flowerbed[0] == 0:
                    if flowerbed[i-1] == 0:
                        counter += 1
                        flowerbed[i] = 1
                        if counter == n:
                            return True
                else:
                    if flowerbed[i-1] == 0 and flowerbed[i+1] == 0:
                        counter += 1
                        flowerbed[i] = 1
                        if counter == n:
                            return True
        if counter == n:
            return True
        else:
            return False
